# PE Demo Configuration
# ---------------------
#
# This PE-CFN config retrieves modules from the Puppet Forge that populate Puppet
# agents with some basic content for use in demonstrating Puppet Enterprise Console.
#
# This stack deploys the user variance module to all machines
# and installs a vanilla wordpress installation on one agent.
# You can access the web interface on port 80 after the stack is built.
#
# A common use of this config is to demonstrate and tinker with Puppet
# Enterprise 2.0. Once created, one can browse to port 443 on the masters
# ec2 public hostname and login with user: 'cfn_user' and password: 'cfn_password'.
#
# I encourage you to take a look at the Enterprise Console, experiment with Live
# Management, see how that relates to MCollective and otherwise enjoy a fully
# functional Puppet environment.
#
#
# This section specifies which modules to grab from forge.puppetlabs.com
install_modules:
  - rcoleman-variance
  - rcoleman-wordpress
  - rcoleman-mysql
  - rcoleman-pedemo
# dashboard_groups allow you to specify multiple classes and parameters and then
# simply include the group on your agents instead of repeating the classification
# over and over.
dashboard_groups:
  variance_group:
    classes:
      - variance::do
      - variance
# Here's where the Puppet agents are defined. Note that the Puppet Master is
# automatically defined for you.
puppet_agents:
  # This agent will receive a fully functional wordpress website with demo content.
  # visit its public dns name via port 80 in your browser once it's built.
  WordpressAgent:
    classes:
      - pedemo::wordpressdemo
    ports:
      - 80
    groups: variance_group
  # The rest of these agents receive content to populate the Enterprise Console and
  # make it generally useful for demonstration right off the bat.
  Agent2:
    groups: variance_group
  Agent3:
    groups: variance_group
    classes:
      - variance::noop
  Agent4:
    groups: variance_group
  Agent5:
    groups: variance_group
  Agent6:
    groups: variance_group
  Agent7:
    groups: variance_group
  Agent8:
    groups: variance_group
  Agent9:
    classes:
      - variance::fail
